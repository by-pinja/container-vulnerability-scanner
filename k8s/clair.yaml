apiVersion: apps/v1
kind: Deployment
metadata:
  name: clair-and-postgres
  namespace: clair
  labels:
    app: clair-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clair-app
  template:
    metadata:
      labels:
        app: clair-app
    spec:
      containers:
      - image: quay.io/coreos/clair:v2.0.3
        args:
        - -config
        - /config/config.yaml
        - --insecure-tls
        imagePullPolicy: Always
        name: clair
        ports:
        - containerPort: 6060
          protocol: TCP
        - containerPort: 6061
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: clair-config
      - image: postgres:9.6
        env:
        - name: POSTGRES_PASSWORD
          value: ""
        imagePullPolicy: IfNotPresent
        name: postgres
        ports:
        - containerPort: 5432
          name: postgres-port
          protocol: TCP
      - image: foo
        imagePullPolicy: IfNotPresent
        name: clairctl
        securityContext:
          privileged: true
        ports:
        - containerPort: 80
          name: http-port
          protocol: TCP
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker-sock-volume
      restartPolicy: Always
      volumes:
        - name: clair-config
          configMap:
            name: clair-config
        - name: docker-sock-volume
          hostPath:
            path: /var/run/docker.sock

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: clair-config
  namespace: clair
data:
  config.yaml: |-
    clair:
      database:
        # Database driver
        type: pgsql
        options:
          # PostgreSQL Connection string
          # https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING
          source: host=localhost port=5432 user=postgres sslmode=disable statement_timeout=60000

          # Number of elements kept in the cache
          # Values unlikely to change (e.g. namespaces) are cached in order to save prevent needless roundtrips to the database.
          cachesize: 16384

          # 32-bit URL-safe base64 key used to encrypt pagination tokens
          # If one is not provided, it will be generated.
          # Multiple clair instances in the same cluster need the same value.
          paginationkey: 

      api:
        # v3 grpc/RESTful API server address
        addr: "0.0.0.0:6060"

        # Health server address
        # This is an unencrypted endpoint useful for load balancers to check to healthiness of the clair server.
        healthaddr: "0.0.0.0:6061"

        # Deadline before an API request will respond with a 503
        timeout: 900s

        # Optional PKI configuration
        # If you want to easily generate client certificates and CAs, try the following projects:
        # https://github.com/coreos/etcd-ca
        # https://github.com/cloudflare/cfssl
        servername:
        cafile:
        keyfile:
        certfile:

      worker:
        namespace_detectors:
          - os-release
          - lsb-release
          - apt-sources
          - alpine-release
          - redhat-release

        feature_listers:
          - apk
          - dpkg
          - rpm

      updater:
        # Frequency the database will be updated with vulnerabilities from the default data sources
        # The value 0 disables the updater entirely.
        interval: 2h
        enabledupdaters: 
          - debian
          - ubuntu
          - rhel
          - oracle
          - alpine

      notifier:
        # Number of attempts before the notification is marked as failed to be sent
        attempts: 3

        # Duration before a failed notification is retried
        renotifyinterval: 2h

        http:
          # Optional endpoint that will receive notifications via POST requests
          endpoint:

          # Optional PKI configuration
          # If you want to easily generate client certificates and CAs, try the following projects:
          # https://github.com/cloudflare/cfssl
          # https://github.com/coreos/etcd-ca
          servername:
          cafile: 
          keyfile: 
          certfile: 

          # Optional HTTP Proxy: must be a valid URL (including the scheme).
          proxy:

---

apiVersion: v1
kind: Service
metadata:
  name: clairsvc
  namespace: clair
  labels:
    app: clair
spec:
  type: NodePort
  ports:
  - port: 6060
    protocol: TCP
    nodePort: 30060
    name: clair-port0
  - port: 6061
    protocol: TCP
    nodePort: 30061
    name: clair-port1
  selector:
    app: clair