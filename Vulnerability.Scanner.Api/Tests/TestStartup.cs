using System;
using System.Runtime.InteropServices;
using Hangfire;
using Hangfire.MemoryStorage;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.DependencyInjection;
using Vulnerability.Scanner.Api.Data;
using Vulnerability.Scanner.Api.Options;
using Vulnerability.Scanner.Clair;

namespace Vulnerability.Scanner.Api.Tests
{
    public class TestStartup
    {
        public TestStartup()
        {
        }

        public void ConfigureServices(IServiceCollection services)
        {
            services.AddMvc()
                .SetCompatibilityVersion(CompatibilityVersion.Version_2_1);

            services.AddHangfire(config => config.UseMemoryStorage());
            services.AddTransient<IClairScanner, ClairScannerMock>();

            var dbId = Guid.NewGuid().ToString();
            services.AddDbContext<ScannerDataContext>(
                opt => opt.UseInMemoryDatabase(dbId));
        }

        public void Configure(IApplicationBuilder app, IHostingEnvironment env)
        {
           var options = new BackgroundJobServerOptions
            {
                WorkerCount = 2
            };

            app.UseHangfireServer(options);
            app.UseMvc();
        }
    }
}