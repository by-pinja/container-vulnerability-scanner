using System;
using System.Linq;
using System.Net;
using FluentAssertions;
using Protacon.NetCore.WebApi.TestUtil;
using Protacon.NetCore.WebApi.TestUtil.Extensions;
using Vulnerability.Scanner.Api.Controllers.Models;
using Vulnerability.Scanner.Api.Data;
using Xunit;

namespace Vulnerability.Scanner.Api.Tests
{
    public class GroupTests
    {
        [Fact]
        public void WhenGroupIsCreated_ThenReportsWillBeAvailable()
        {
            var host = TestHost.Run<TestStartup>();
            var groupId = Guid.NewGuid();

            var result = host
                .Post($"/v1/group/{groupId}", new GroupScanRequest
                {
                    Images = new [] { new VulnerabilityScanRequest { Image = "node:latest" } }
                })
                .ExpectStatusCode(HttpStatusCode.OK)
                .WithContentOf<GroupScanResponse>()
                .Select();

            host.Get(result.ScanReponses.Single().ResultsUri)
                .WaitForStatusCode(HttpStatusCode.OK, timeout: TimeSpan.FromSeconds(10))
                .WithContentOf<VurnelabilityModel[]>()
                .Passing(x => x.Should().HaveCount(654));

            host.Get(result.ScanReponses.Single().HtmlResultsUri)
                .WaitForStatusCode(HttpStatusCode.OK, timeout: TimeSpan.FromSeconds(10))
                .WithContentOf<string>()
                .Passing(x => x.Should().Contain("High"));
        }

        [Fact]
        public void WhenGroupIsUpdated_ThenPreviousResultsAreReplaced()
        {
        }

        [Fact]
        public void WhenGroupsAreAdded_ThenTheyCanBeGet()
        {
        }
    }
}