using System;
using System.Net;
using System.Threading;
using FluentAssertions;
using Newtonsoft.Json.Linq;
using Protacon.NetCore.WebApi.TestUtil;
using Protacon.NetCore.WebApi.TestUtil.Extensions;
using Vulnerability.Scanner.Api.Controllers.Models;
using Vulnerability.Scanner.Api.Tests;
using Xunit;

namespace Vulnerability.Scanner.Api
{
    public class FunctionalTests
    {
        [Fact]
        public void WhenPdfIsSent_ThenPdfShouldBeSoonAvailable()
        {
            var host = TestHost.Run<TestStartup>();

            var result = host
                .Post("/v1/scan/", new VulnerabilityScanRequest {
                    Image = "testimage:latest"
                })
                .ExpectStatusCode(HttpStatusCode.OK)
                .WithContentOf<VulnerabilityScanResponse>()
                .Select();

            Thread.Sleep(10000); // SAVPEK TODO remove after utilities are updated...

            host.Get(result.ResultsUri)
                .WaitForStatusCode(HttpStatusCode.OK, timeout: TimeSpan.FromSeconds(10))
                .WithContentOf<JObject>()
                .Passing(x => x["critical"].Value<int>().Should().Be(3));
        }
    }
}