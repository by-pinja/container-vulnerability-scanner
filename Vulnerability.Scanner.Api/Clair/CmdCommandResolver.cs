using System;
using System.IO;
using System.Runtime.InteropServices;
using System.Text.RegularExpressions;
using Microsoft.Extensions.Options;
using Vulnerability.Scanner.Api.Options;

namespace Vulnerability.Scanner.Api.Clair
{
    public class CmdCommandResolver
    {
        private readonly IOptionsSnapshot<DockerHubOptions> _dockerHubSettings;

        private readonly Regex _isGcrRegex = new Regex("^.*?.gcr.io.*");
        private readonly IGoogleCloud _googleCloud;

        public CmdCommandResolver(IOptionsSnapshot<DockerHubOptions> dockerHubSettings, IGoogleCloud googleCloud)
        {
            _dockerHubSettings = dockerHubSettings;
            _googleCloud = googleCloud;
        }

        public string GetKlarCommand(string imageName)
        {
            if(_isGcrRegex.IsMatch(imageName))
            {
                return $"cd ../compose/ && docker-compose run -e DOCKER_USER=oauth2accesstoken -e DOCKER_PASSWORD={_googleCloud.GetOAuth2Token().Result} klar {imageName}";
            }

            if(RuntimeInformation.IsOSPlatform(OSPlatform.Windows))
            {
                return $"cd ../compose/ && docker-compose run -e DOCKER_USER={_dockerHubSettings.Value.Username} -e DOCKER_PASSWORD={_dockerHubSettings.Value.Password} klar {imageName}";
            }

            return $"export DOCKER_USER={_dockerHubSettings.Value.Username}; DOCKER_PASSWORD={_dockerHubSettings.Value.Password}; klar {imageName}";
        }
    }
}