using System;
using System.Linq;
using Microsoft.Extensions.Options;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Vulnerability.Scanner.Api.Data;
using Vulnerability.Scanner.Api.Options;
using Vulnerability.Scanner.Api.Shell;
using Vulnerability.Scanner.Clair;

namespace Vulnerability.Scanner.Api.Clair
{
    public class ClairScannerInLocalContainer : IClairScanner
    {
        private readonly ICommandLine shell;
        private readonly ScannerDataContext context;
        private readonly DockerHub dockerHubSettings;

        public ClairScannerInLocalContainer(IOptionsSnapshot<DockerHub> dockerHubSettings, ICommandLine shell, ScannerDataContext context)
        {
            this.dockerHubSettings = dockerHubSettings.Value;
            this.shell = shell;
            this.context = context;
        }

        public void CreateReport(Guid reportId)
        {
            var report = context.Reports.Single(x => x.Id == reportId);
            var result = shell.Run($"docker-compose run klar {report.Image}");
            var asObject =  JsonConvert.DeserializeObject<VurnelabilityModel[]>(result);
            report.Processed = true;
            report.Vurnelabilities = asObject;
        }
    }
}