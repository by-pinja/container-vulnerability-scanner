using System;
using System.IO;
using System.Threading.Tasks;
using Google.Apis.Auth.OAuth2;
using Microsoft.Extensions.Options;
using Vulnerability.Scanner.Api.Options;

namespace Vulnerability.Scanner.Api.Clair
{
    public class GoogleCloud: IGoogleCloud
    {
        private readonly IOptionsSnapshot<GcrOptions> _gcrOptions;

        public GoogleCloud(IOptionsSnapshot<GcrOptions> gcrOptions)
        {
            _gcrOptions = gcrOptions;
        }

        public async Task<string> GetOAuth2Token()
        {
            if(string.IsNullOrEmpty(_gcrOptions.Value.GcrJsonKeyPath))
                throw new InvalidOperationException($"{nameof(_gcrOptions.Value.GcrJsonKeyPath)} is not set.");

            using (var stream = new FileStream(_gcrOptions.Value.GcrJsonKeyPath, FileMode.Open, FileAccess.Read))
            {
                return await GoogleCredential
                    .FromStream(stream)
                    .CreateScoped(new [] { "https://www.googleapis.com/auth/devstorage.read_only" })
                    .UnderlyingCredential
                    .GetAccessTokenForRequestAsync();
            }
        }
    }
}