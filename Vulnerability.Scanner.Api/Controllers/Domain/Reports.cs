using System;
using System.Linq;
using Hangfire;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Options;
using Vulnerability.Scanner.Api.Controllers.Models;
using Vulnerability.Scanner.Api.Data;
using Vulnerability.Scanner.Clair;

namespace Vulnerability.Scanner.Api.Controllers.Domain
{
    public class Reports
    {
        private readonly IBackgroundJobClient _jobClient;
        private readonly IOptionsSnapshot<GeneralOptions> _generalConfig;
        private readonly ScannerDataContext _dataContext;

        public Reports(
            IBackgroundJobClient jobClient,
            IOptionsSnapshot<GeneralOptions> generalConfig,
            ScannerDataContext dataContext)
        {
            _jobClient = jobClient;
            _generalConfig = generalConfig;
            _dataContext = dataContext;
        }

        public VulnerabilityScanResponse CreateReport(VulnerabilityScanRequest scanRequest)
        {
            var entity = _dataContext.Reports.Add(new ReportModel(scanRequest.Image)).Entity;

            _dataContext.SaveChanges();

            _jobClient
                .Enqueue<IClairScanner>(c => c.CreateReport(entity.Id));

            return new VulnerabilityScanResponse(entity, _generalConfig);
        }

        public ReportModel GetReportOrDefault(Guid id)
        {
            return _dataContext.Reports.Include(x => x.Vurnelabilities).SingleOrDefault(x => x.Id == id);
        }
    }
}