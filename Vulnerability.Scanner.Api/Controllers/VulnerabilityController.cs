using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Hangfire;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Options;
using Newtonsoft.Json.Linq;
using Vulnerability.Scanner.Api.Controllers.Domain;
using Vulnerability.Scanner.Api.Controllers.Models;
using Vulnerability.Scanner.Api.Data;
using Vulnerability.Scanner.Api.Options;
using Vulnerability.Scanner.Api.Shell;
using Vulnerability.Scanner.Api.Util;
using Vulnerability.Scanner.Clair;

namespace Vulnerability.Scanner.Api.Controllers
{
    [ApiController]
    public class VulnerabilityController : Controller
    {
        private readonly IOptionsSnapshot<GeneralConfig> _generalConfig;
        private readonly ScannerDataContext _dataContext;
        private readonly Reports reportActions;

        public VulnerabilityController(
            IOptionsSnapshot<GeneralConfig> generalConfig,
            ScannerDataContext dataContext,
            Reports reportActions)
        {
            _generalConfig = generalConfig;
            _dataContext = dataContext;
            this.reportActions = reportActions;
        }

        [HttpPost("v1/scan/")]
        public ActionResult<VulnerabilityScanResponse> Post([FromBody] VulnerabilityScanRequest value)
        {
            return Ok(reportActions.CreateReport(value));
        }

        [HttpGet("/v1/reports/{id}")]
        public ActionResult<object> GetReport(Guid id)
        {
            var report = reportActions.GetReportOrDefault(id);

            if (report == null)
                return NotFound();

            if (!report.Processed)
                return NotFound(new { Status = "Processing..." });

            return Ok(report.Vurnelabilities);
        }

        [HttpGet("/v1/reports/{id}/html")]
        public IActionResult GetReportAsHtml(Guid id)
        {
            var report = reportActions.GetReportOrDefault(id);

            if (report == null)
                return NotFound();

            return View("~/Controllers/Pages/Report.cshtml", report);
        }
    }
}
