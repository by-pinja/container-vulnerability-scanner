using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Options;
using Vulnerability.Scanner.Api.Controllers.Domain;
using Vulnerability.Scanner.Api.Controllers.Models;
using Vulnerability.Scanner.Api.Data;
using Vulnerability.Scanner.Api.Model;

namespace Vulnerability.Scanner.Api.Controllers
{
    public class ReportGroupController : Controller
    {
        private readonly Reports reports;
        private readonly IOptionsSnapshot<GeneralOptions> config;

        public ReportGroupController(Reports reports, ScannerDataContext context, IOptionsSnapshot<GeneralOptions> config)
        {
            this.reports = reports;
            this.config = config;
        }

        [HttpPut("v1/group/{groupId}")]
        public ActionResult<GroupScanResponse> Put(string groupId, [FromBody] GroupScanRequest value)
        {
            if (string.IsNullOrEmpty(groupId))
                return BadRequest();

            var group = this.reports.PutGroup(groupId, value);
            return new GroupScanResponse(group, this.config);
        }

        [HttpGet("v1/group/{groupId}")]
        public ActionResult<GroupScanResponse> GetGroupReport(string groupId)
        {
            var group = this.reports.GetGroupOrDefault(groupId);

            if(group == null)
                return NotFound();

            return new GroupScanResponse(group, this.config);
        }

        [HttpGet("v1/group/{groupId}/html")]
        public IActionResult GetGroupReportHtml(string groupId)
        {
            var group = this.reports.GetGroupOrDefault(groupId);

            if(group == null)
                return NotFound();

            return View("~/Controllers/Pages/GroupReport.cshtml", group);
        }

        [HttpGet("v1/group")]
        public ActionResult<GroupSummaryModel> GetAll()
        {
            return Ok(this.reports.GetGroupSummary());
        }

        [HttpGet("v1/group/html")]
        public IActionResult GetAllHtml()
        {
            return View("~/Controllers/Pages/GroupSummary.cshtml", this.reports.GetGroupSummary());
        }
    }
}