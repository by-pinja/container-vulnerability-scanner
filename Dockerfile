FROM golang:1.8 as clairBuild

RUN go-wrapper download github.com/jgsqware/clairctl \
    && cd /go/src/github.com/jgsqware/clairctl \
    && go get -u github.com/jteeuwen/go-bindata/... \
    && go generate ./clair \
    && cd /go \
    && CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o /go/bin/clairctl github.com/jgsqware/clairctl

FROM microsoft/dotnet:2.1-runtime-alpine

ENV DOCKER_HOST unix:///var/run/docker.sock
ARG DOCKER_PATH="/usr/bin"
ARG DOCKER_VERSION="1.13.1"
ARG DOCKER_URI="https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz"
ARG DOCKER_GID="412"
ENV DOCKER_API_VERSION="1.23"

COPY --from=clairBuild /go/bin/clairctl /usr/local/bin/clairctl

COPY ./Clair/Config/clairctl.yml /etc/clairctl/clairctl.yml

RUN apk update && \
    apk --no-cache add bash libc6-compat curl openssh-client python py-crcmod && \
    curl ${DOCKER_URI} -o /tmp/docker-${DOCKER_VERSION}.tgz && \
    cd /tmp && \
    curl ${DOCKER_URI}.sha256 -o - | sha256sum -c - && \
    tar -xvzf /tmp/docker-${DOCKER_VERSION}.tgz docker/docker && \
    mv -v docker/docker ${DOCKER_PATH}/docker && \
    rmdir -v docker && \
    rm -v /tmp/docker-${DOCKER_VERSION}.tgz && \
    chmod -v +x ${DOCKER_PATH}/docker && \
    addgroup -S -g ${DOCKER_GID} docker && \
    adduser -S -G docker docker && \
    chmod -v +x /usr/local/bin/clairctl

CMD "/bin/sh"